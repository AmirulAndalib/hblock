#!/sbin/sh

# Author:     Héctor Molinero Fernández <hector@molinero.dev>
# License:    MIT, https://opensource.org/licenses/MIT
# Repository: https://github.com/hectorm/hblock

# Script based on Chainfire's SuperSU.
# Thanks for your awesome work!

#==============================================================================#

OUTFD=$2
ZIP=$3

readlink /proc/$$/fd/$OUTFD 2>/dev/null | grep /tmp >/dev/null
if [ "$?" -eq "0" ]; then
  # rerouted to log file, we don't want our ui_print commands going there
  OUTFD=0

  # we are probably running in embedded mode, see if we can find the right fd
  # we know the fd is a pipe and that the parent updater may have been started as
  # 'update-binary 3 fd zipfile'
  for FD in `ls /proc/$$/fd`; do
    readlink /proc/$$/fd/$FD 2>/dev/null | grep pipe >/dev/null
    if [ "$?" -eq "0" ]; then
      ps | grep " 3 $FD " | grep -v grep >/dev/null
      if [ "$?" -eq "0" ]; then
        OUTFD=$FD
        break
      fi
    fi
  done
fi

ui_print() {
  echo -n -e "ui_print $1\n" >> /proc/self/fd/$OUTFD
  echo -n -e "ui_print\n" >> /proc/self/fd/$OUTFD
}

ch_con() {
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toybox chcon -h u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/toolbox chcon -h u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toolbox chcon -h u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  chcon -h u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toybox chcon u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/toolbox chcon u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toolbox chcon u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
  chcon u:object_r:system_file:s0 $1 1>/dev/null 2>/dev/null
}

ch_con_ext() {
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toybox chcon $2 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/toolbox chcon $2 $1 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toolbox chcon $2 $1 1>/dev/null 2>/dev/null
  chcon $2 $1 1>/dev/null 2>/dev/null
}

ln_con() {
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toybox ln -s $1 $2 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/toolbox ln -s $1 $2 1>/dev/null 2>/dev/null
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toolbox ln -s $1 $2 1>/dev/null 2>/dev/null
  ln -s $1 $2 1>/dev/null 2>/dev/null
  ch_con $2 1>/dev/null 2>/dev/null
}

set_perm() {
  chown $1.$2 $4
  chown $1:$2 $4
  chmod $3 $4
  ch_con $4
  ch_con_ext $4 $5
}

cp_perm() {
  rm $5
  if [ -f "$4" ]; then
    cat $4 > $5
    set_perm $1 $2 $3 $5 $6
  fi
}

is_mounted() {
  if [ ! -z "$2" ]; then
    cat /proc/mounts | grep $1 | grep $2, >/dev/null
  else
    cat /proc/mounts | grep $1 >/dev/null
  fi
  return $?
}

toolbox_mount() {
  RW=rw
  if [ ! -z "$2" ]; then
    RW=$2
  fi

  DEV=
  POINT=
  FS=
  for i in `cat /etc/fstab | grep -v "#" | grep "$1"`; do
    if [ -z "$DEV" ]; then
      DEV=$i
    elif [ -z "$POINT" ]; then
      POINT=$i
    elif [ -z "$FS" ]; then
      FS=$i
      break
    fi
  done
  if [ ! -z "$SYSTEM_DEVICE" ]; then
    if (`echo "$SYSTEM_DEVICE" | grep "$DEV" >/dev/null`); then
      DEV=$SYSTEM_DEVICE
    fi
  fi
  if [ ! -z "$VENDOR_DEVICE" ]; then
    if (`echo "$VENDOR_DEVICE" | grep "$DEV" >/dev/null`); then
      DEV=$VENDOR_DEVICE
    fi
  fi
  if [ ! -z "$DEV" ] && [ ! -z "$POINT" ] && [ ! -z "$DEV" ]; then
    if (! is_mounted $1 $RW); then mount -t $FS -o $RW $DEV $POINT; fi
    if (! is_mounted $1 $RW); then mount -t $FS -o $RW,remount $DEV $POINT; fi
  fi

  DEV=
  POINT=
  FS=
  for i in `cat /etc/recovery.fstab | grep -v "#" | grep "$1"`; do
    if [ -z "$POINT" ]; then
      POINT=$i
    elif [ -z "$FS" ]; then
      FS=$i
    elif [ -z "$DEV" ]; then
      DEV=$i
      break
    fi
  done
  # usually <point> <fs> <dev>, but sometimes <dev> <point> <fs>
  if [ "$DEV" = "ext4" ] || [ "$DEV" = "f2fs" ] || [ "$DEV" = "vfat" ] || [ "$DEV" = "emmc" ] || [ "$DEV" = "swap" ]; then
    local _POINT=$POINT
    local _FS=$FS
    local _DEV=$DEV
    DEV=$_POINT
    POINT=$_FS
    FS=$_DEV
  fi
  if [ ! -z "$SYSTEM_DEVICE" ]; then
    if (`echo "$SYSTEM_DEVICE" | grep "$DEV" >/dev/null`); then
      DEV=$SYSTEM_DEVICE
    fi
  fi
  if [ ! -z "$VENDOR_DEVICE" ]; then
    if (`echo "$VENDOR_DEVICE" | grep "$DEV" >/dev/null`); then
      DEV=$VENDOR_DEVICE
    fi
  fi
  if [ ! -z "$DEV" ] && [ ! -z "$POINT" ] && [ ! -z "$DEV" ]; then
    if [ "$FS" = "emmc" ]; then
      if (! is_mounted $1 $RW); then mount -t ext4 -o $RW $DEV $POINT; fi
      if (! is_mounted $1 $RW); then mount -t ext4 -o $RW,remount $DEV $POINT; fi
      if (! is_mounted $1 $RW); then mount -t f2fs -o $RW $DEV $POINT; fi
      if (! is_mounted $1 $RW); then mount -t f2fs -o $RW,remount $DEV $POINT; fi
    else
      if (! is_mounted $1 $RW); then mount -t $FS -o $RW $DEV $POINT; fi
      if (! is_mounted $1 $RW); then mount -t $FS -o $RW,remount $DEV $POINT; fi
    fi
  fi
}

remount_rw() {
  if (! is_mounted "$1" rw); then mount -o rw,remount "$1"; fi
  if (! is_mounted "$1" rw); then mount -o rw,remount "$1" "$1"; fi
  if (! is_mounted "$1" rw); then toolbox_mount "$1"; fi
}

if [ ! -f "/sbin/unzip" ]; then
  ui_print "- BAD RECOVERY DETECTED, NO UNZIP, ABORTING"
  exit 1
fi

#==============================================================================#

ui_print "=================="
ui_print "|     hBlock     |"
ui_print "=================="

ui_print "- Mounting /system (rw), /data (rw) and rootfs (rw)"
remount_rw /system
remount_rw /data
remount_rw /

ui_print "- Extracting files"
mkdir /tmp/hblock
cd /tmp/hblock
unzip -o "$ZIP"
CON=/tmp/hblock

ui_print "- Copying files"
cp_perm 0 0 0644 "$CON"/hosts /data/hosts
rm /system/etc/hosts
ln_con /data/hosts /system/etc/hosts

ui_print "- Unmounting /system"
umount /system

ui_print "- Done!"
ui_print " "
exit 0
