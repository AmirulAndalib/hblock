stages:
  - 'lint'
  - 'test'
  - 'build'
  - 'package'
  - 'deploy'

default:
  image: 'docker.io/alpine:latest'

lint-shellcheck-stable:
  stage: 'lint'
  image: 'docker.io/koalaman/shellcheck-alpine:stable'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'shellcheck --version'
  script:
    - 'make lint'

test-debian-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make'
  script:
    - 'make test-all'

test-ubuntu-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/ubuntu:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make'
  script:
    - 'make test-all'

test-fedora-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/fedora:latest'
  before_script:
    - 'dnf install -y ca-certificates curl findutils file idn2 make'
  script:
    - 'make test-all'

test-rockylinux-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/rockylinux:latest'
  before_script:
    - 'dnf install -y ca-certificates curl findutils file idn2 make'
  script:
    - 'make test-all'

test-opensuse-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/opensuse/leap:latest'
  before_script:
    - 'zypper install -y ca-certificates curl file gzip libidn2-tools make tar'
  script:
    - 'make test-all'

test-archlinux-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/archlinux:latest'
  before_script:
    - 'pacman -Syu --noconfirm --needed ca-certificates curl file libidn2 make'
  script:
    - 'make test-all'

test-alpine-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:latest'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
  script:
    - 'make test-all'

test-openwrt-latest:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/openwrtorg/rootfs:latest'
  before_script:
    - 'mkdir -p /var/run/; mkdir -p /var/lock/; opkg update ||:'
    - 'opkg install ca-certificates curl file idn2 make'
  script:
    - 'make test-all'

test-alpine-edge-shell-bash:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache bash'
    - 'apk info --no-cache bash'
  script:
    - 'make test-all TEST_SHELL="$(command -v bash)"'

test-alpine-edge-shell-zsh:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache zsh'
    - 'apk info --no-cache zsh'
  script:
    - 'make test-all TEST_SHELL="$(command -v zsh)"'

test-alpine-edge-shell-dash:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache dash'
    - 'apk info --no-cache dash'
  script:
    - 'make test-all TEST_SHELL="$(command -v dash)"'

test-alpine-edge-shell-mksh:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache mksh'
    - 'apk info --no-cache mksh'
  script:
    - 'make test-all TEST_SHELL="$(command -v mksh)"'

test-alpine-edge-shell-oksh:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing oksh'
    - 'apk info --no-cache oksh'
  script:
    - 'make test-all TEST_SHELL="$(command -v oksh)"'

test-alpine-edge-shell-yash:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache yash'
    - 'apk info --no-cache yash'
  script:
    - 'make test-all TEST_SHELL="$(command -v yash)"'

test-alpine-edge-shell-busybox-ash:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache busybox'
    - 'apk info --no-cache busybox'
  script:
    - 'make test-all TEST_SHELL="$(command -v busybox) ash"'

test-openwrt-latest-shell-busybox-ash:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/openwrtorg/rootfs:latest'
  before_script:
    - 'mkdir -p /var/run/; mkdir -p /var/lock/; opkg update ||:'
    - 'opkg install ca-certificates curl file idn2 make'
    - 'opkg install busybox'
    - 'opkg info busybox'
  script:
    - 'make test-all TEST_SHELL="$(command -v busybox) ash"'

test-alpine-edge-awk-gawk:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache gawk'
    - 'apk info --no-cache gawk'
  script:
    - 'ln -sf "$(command -v gawk)" /usr/bin/awk'
    - 'make test-all'

test-alpine-edge-awk-mawk:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache mawk'
    - 'apk info --no-cache mawk'
  script:
    - 'ln -sf "$(command -v mawk)" /usr/bin/awk'
    - 'make test-all'

test-alpine-edge-awk-busybox-awk:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/alpine:edge'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache busybox'
    - 'apk info --no-cache busybox'
  script:
    - 'ln -sf "$(command -v busybox)" /usr/bin/awk'
    - 'make test-all'

test-archlinux-latest-awk-nawk:
  stage: 'test'
  needs:
    - 'lint-shellcheck-stable'
  image: 'docker.io/archlinux:latest'
  before_script:
    - 'pacman -Syu --noconfirm --needed ca-certificates curl file libidn2 make'
    - 'pacman -Syu --noconfirm --needed nawk'
    - 'pacman -Qi nawk'
  script:
    - 'ln -sf "$(command -v nawk)" /usr/bin/awk'
    - 'make test-all'

build-debian-latest:
  stage: 'build'
  needs:
    - 'test-debian-latest'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-debian-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-debian-latest/']

build-ubuntu-latest:
  stage: 'build'
  needs:
    - 'test-ubuntu-latest'
  image: 'docker.io/ubuntu:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-ubuntu-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-ubuntu-latest/']

build-fedora-latest:
  stage: 'build'
  needs:
    - 'test-fedora-latest'
  image: 'docker.io/fedora:latest'
  before_script:
    - 'dnf install -y ca-certificates curl findutils file idn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-fedora-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-fedora-latest/']

build-rockylinux-latest:
  stage: 'build'
  needs:
    - 'test-rockylinux-latest'
  image: 'docker.io/rockylinux:latest'
  before_script:
    - 'dnf install -y ca-certificates curl findutils file idn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-rockylinux-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-rockylinux-latest/']

build-opensuse-latest:
  stage: 'build'
  needs:
    - 'test-opensuse-latest'
  image: 'docker.io/opensuse/tumbleweed:latest'
  before_script:
    - 'zypper install -y ca-certificates curl file gzip libidn2-tools make tar'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-opensuse-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-opensuse-latest/']

build-archlinux-latest:
  stage: 'build'
  needs:
    - 'test-archlinux-latest'
  image: 'docker.io/archlinux:latest'
  before_script:
    - 'pacman -Syu --noconfirm --needed ca-certificates curl file libidn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-archlinux-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-archlinux-latest/']

build-alpine-latest:
  stage: 'build'
  needs:
    - 'test-alpine-latest'
  image: 'docker.io/alpine:latest'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-alpine-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-alpine-latest/']

build-openwrt-latest:
  stage: 'build'
  needs:
    - 'test-openwrt-latest'
  image: 'docker.io/openwrtorg/rootfs:latest'
  before_script:
    - 'mkdir -p /var/run/; mkdir -p /var/lock/; opkg update ||:'
    - 'opkg install ca-certificates curl file idn2 make'
  script:
    - 'make hosts stats index'
    - 'mv ./dist/ ./dist-build-openwrt-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-openwrt-latest/']

package-deb:
  stage: 'package'
  needs:
    - 'build-debian-latest'
    - 'build-ubuntu-latest'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make'
    - 'apt-get install -y build-essential debhelper dpkg-dev m4 rsync'
  script:
    - 'make package-deb'
    - 'mv ./dist/ ./dist-package-deb/'
    - 'apt install -y ./dist-package-deb/packages/hblock-*.deb'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-deb/']

package-rpm:
  stage: 'package'
  needs:
    - 'build-fedora-latest'
    - 'build-rockylinux-latest'
    - 'build-opensuse-latest'
  image: 'docker.io/fedora:latest'
  before_script:
    - 'dnf install -y ca-certificates curl findutils file idn2 make'
    - 'dnf install -y m4 rpm-build rpmdevtools rsync systemd'
  script:
    - 'make package-rpm'
    - 'mv ./dist/ ./dist-package-rpm/'
    - 'dnf install -y ./dist-package-rpm/packages/hblock-*.rpm'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-rpm/']

package-pkgbuild:
  stage: 'package'
  needs:
    - 'build-archlinux-latest'
  image: 'docker.io/archlinux:latest'
  before_script:
    - 'pacman -Syu --noconfirm --needed ca-certificates curl file libidn2 make'
    - 'pacman -Syu --noconfirm --needed base-devel m4 rsync sudo'
  script:
    - 'mkdir ./dist/; chown nobody ./dist/'
    - 'sudo -u nobody make package-pkgbuild'
    - 'mv ./dist/ ./dist-package-pkgbuild/'
    - 'pacman -U --noconfirm ./dist-package-pkgbuild/packages/hblock-*.pkg.tar.*'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-pkgbuild/']

package-apkbuild:
  stage: 'package'
  needs:
    - 'build-alpine-latest'
  image: 'docker.io/alpine:latest'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache alpine-sdk m4 rsync sudo'
    - 'adduser -D -G abuild build'
    - 'printf "\n%s\n" "build ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
    - 'sudo -u build abuild-keygen -a -i -n'
  script:
    - 'mkdir ./dist/; chown build ./dist/'
    - 'sudo -u build make package-apkbuild'
    - 'mv ./dist/ ./dist-package-apkbuild/'
    - 'apk add --allow-untrusted ./dist-package-apkbuild/packages/hblock-*.apk'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-apkbuild/']

package-npm:
  stage: 'package'
  needs:
    - 'build-alpine-latest'
  image: 'docker.io/node:current-alpine'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make'
    - 'apk add --no-cache m4 rsync'
  script:
    - 'make package-npm'
    - 'mv ./dist/ ./dist-package-npm/'
    - 'npm install -g ./dist-package-npm/packages/hblock-*.tgz'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-npm/']

pages:
  stage: 'deploy'
  needs:
    - 'build-debian-latest'
  only: ['master']
  script:
    - 'mv ./dist-build-debian-latest/ ./public/'
  artifacts:
    paths: ['./public/']
