stages:
  - 'lint'
  - 'build'
  - 'package'
  - 'deploy'

default:
  image: 'docker.io/alpine:latest'

lint:
  stage: 'lint'
  image: 'docker.io/koalaman/shellcheck-alpine:stable'
  before_script:
    - |
      apk add --no-cache make
      shellcheck --version
  script:
    - |
      make clean lint

build:ubuntu:latest:
  stage: 'build'
  image: 'docker.io/ubuntu:latest'
  before_script:
    - |
      apt-get update
      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates curl file gawk grep idn2 make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-ubuntu-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-ubuntu-latest/']

build:debian:latest:
  stage: 'build'
  image: 'docker.io/debian:latest'
  before_script:
    - |
      apt-get update
      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates curl file gawk grep idn2 make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-debian-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-debian-latest/']

build:fedora:latest:
  stage: 'build'
  image: 'docker.io/fedora:latest'
  before_script:
    - |
      dnf install -y \
        ca-certificates curl file gawk grep libidn2 make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-fedora-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-fedora-latest/']

build:centos:latest:
  stage: 'build'
  image: 'docker.io/centos:latest'
  before_script:
    - |
      dnf install -y \
        ca-certificates curl file gawk grep libidn2 make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-centos-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-centos-latest/']

build:opensuse:latest:
  stage: 'build'
  image: 'docker.io/opensuse/tumbleweed:latest'
  before_script:
    - |
      zypper install -y \
        ca-certificates curl file gawk grep libidn2-tools make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-opensuse-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-opensuse-latest/']

build:archlinux:latest:
  stage: 'build'
  image: 'docker.io/archlinux:latest'
  before_script:
    - |
      pacman -Sy --noconfirm --needed \
        ca-certificates curl file gawk grep libidn2 make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-archlinux-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-archlinux-latest/']

build:alpine:latest:
  stage: 'build'
  image: 'docker.io/alpine:latest'
  before_script:
    - |
      apk add --no-cache \
        ca-certificates curl file gawk grep libidn2 make sed zip
  script:
    - |
      make clean all
      mv ./dist/ ./dist-build-alpine-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-alpine-latest/']

build:busybox:latest:
  stage: 'build'
  image: 'docker.io/busybox:latest'
  script:
    - | # Partial build, since Busybox does not have the necessary tools.
      mkdir ./dist/
      HOSTNAME='' ./hblock -H 'builtin' -F 'builtin' -S 'builtin' -A 'builtin' -D 'builtin' -O ./dist/hosts
      ./resources/alt-formats/domains.txt.sh ./dist/hosts ./hblock > ./dist/hosts_domains.txt
      ./resources/stats/suffix.sh ./dist/hosts_domains.txt none > ./dist/most_abused_tlds.txt
      ./resources/templates/index.sh ./dist/ > ./dist/index.html
      mv ./dist/ ./dist-build-busybox-latest/
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-busybox-latest/']

package:deb:
  stage: 'package'
  image: 'docker.io/ubuntu:latest'
  before_script:
    - |
      apt-get update
      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential debhelper dh-systemd dpkg-dev make
  script:
    - |
      if [ -d ./resources/deb/ ]; then
        make clean package-deb
        mv ./dist/ ./dist-package-deb/
        apt install -y ./dist-package-deb/hblock-*.deb
        command hblock -v
      fi
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-deb/']

package:rpm:
  stage: 'package'
  image: 'docker.io/fedora:latest'
  before_script:
    - |
      dnf install -y \
        make rpm-build rpmdevtools systemd
  script:
    - |
      if [ -d ./resources/rpm/ ]; then
        make clean package-rpm
        mv ./dist/ ./dist-package-rpm/
        dnf install -y ./dist-package-rpm/hblock-*.rpm
        command hblock -v
      fi
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-rpm/']

package:npm:
  stage: 'package'
  image: 'docker.io/node:current'
  before_script:
    - |
      apt-get update
      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        make wget
  script:
    - |
      if [ -d ./resources/npm/ ]; then
        make clean package-npm
        mv ./dist/ ./dist-package-npm/
        npm install -g ./dist-package-npm/hblock-*.tgz
        command hblock -v
      fi
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-npm/']

pages:
  stage: 'deploy'
  only: ['master']
  script:
    - |
      mv ./dist-build-ubuntu-latest/ ./public/
  artifacts:
    paths: ['./public/']
