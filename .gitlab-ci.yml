stages:
  - 'lint'
  - 'test'
  - 'build'
  - 'package'
  - 'deploy'

default:
  image: 'docker.io/alpine:latest'

lint-shellcheck-stable:
  stage: 'lint'
  image: 'docker.io/koalaman/shellcheck-alpine:stable'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make zip'
    - 'shellcheck --version'
  script:
    - 'make clean lint'

test-bash-latest:
  stage: 'test'
  image: 'docker.io/bash:latest'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make zip'
    - 'bash --version'
  script:
    - 'make clean test TEST_SHELL="$(command -v bash)"'

test-dash-latest:
  stage: 'test'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make zip'
    - 'apt-get install -y dash'
    - 'dpkg -s dash'
  script:
    - 'make clean test TEST_SHELL="$(command -v dash)"'

test-ksh-latest:
  stage: 'test'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make zip'
    - 'apt-get install -y ksh'
    - 'dpkg -s ksh'
  script:
    - 'make clean test TEST_SHELL="$(command -v ksh)"'

test-mksh-latest:
  stage: 'test'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make zip'
    - 'apt-get install -y mksh'
    - 'dpkg -s mksh'
  script:
    - 'make clean test TEST_SHELL="$(command -v mksh)"'

test-openwrt-ash-latest:
  stage: 'test'
  image: 'docker.io/openwrtorg/rootfs:latest'
  before_script:
    - 'mkdir -p /var/lock/'
    - 'opkg update'
    - 'opkg install ca-certificates curl file idn2 make'
    - 'opkg info busybox'
  script:
    - 'make clean test TEST_SHELL="$(command -v busybox) ash"'

build-debian-latest:
  stage: 'build'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-debian-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-debian-latest/']

build-ubuntu-latest:
  stage: 'build'
  image: 'docker.io/ubuntu:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-ubuntu-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-ubuntu-latest/']

build-fedora-latest:
  stage: 'build'
  image: 'docker.io/fedora:latest'
  before_script:
    - 'dnf install -y ca-certificates curl file libidn2 make zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-fedora-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-fedora-latest/']

build-centos-latest:
  stage: 'build'
  image: 'docker.io/centos:latest'
  before_script:
    - 'dnf install -y ca-certificates curl file libidn2 make zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-centos-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-centos-latest/']

build-opensuse-latest:
  stage: 'build'
  image: 'docker.io/opensuse/tumbleweed:latest'
  before_script:
    - 'zypper install -y ca-certificates curl file gzip libidn2-tools make tar zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-opensuse-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-opensuse-latest/']

build-archlinux-latest:
  stage: 'build'
  image: 'docker.io/archlinux:latest'
  before_script:
    - 'pacman -Sy --noconfirm --needed ca-certificates curl file libidn2 make zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-archlinux-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-archlinux-latest/']

build-alpine-latest:
  stage: 'build'
  image: 'docker.io/alpine:latest'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make zip'
  script:
    - 'make clean all'
    - 'mv ./dist/ ./dist-build-alpine-latest/'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-build-alpine-latest/']

package-deb:
  stage: 'package'
  image: 'docker.io/debian:latest'
  before_script:
    - 'apt-get update'
    - 'apt-get install -y ca-certificates curl file idn2 make zip'
    - 'apt-get install -y build-essential debhelper dh-systemd dpkg-dev'
  script:
    - 'make clean package-deb'
    - 'mv ./dist/ ./dist-package-deb/'
    - 'apt install -y ./dist-package-deb/hblock-*.deb'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-deb/']

package-rpm:
  stage: 'package'
  image: 'docker.io/fedora:latest'
  before_script:
    - 'dnf install -y ca-certificates curl file libidn2 make zip'
    - 'dnf install -y rpm-build rpmdevtools systemd'
  script:
    - 'make clean package-rpm'
    - 'mv ./dist/ ./dist-package-rpm/'
    - 'dnf install -y ./dist-package-rpm/hblock-*.rpm'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-rpm/']

package-npm:
  stage: 'package'
  image: 'docker.io/node:current-alpine'
  before_script:
    - 'apk add --no-cache ca-certificates curl file libidn2 make zip'
  script:
    - 'make clean package-npm'
    - 'mv ./dist/ ./dist-package-npm/'
    - 'npm install -g ./dist-package-npm/hblock-*.tgz'
    - 'command hblock -v'
  artifacts:
    expire_in: '1 day'
    paths: ['./dist-package-npm/']

pages:
  stage: 'deploy'
  only: ['master']
  script:
    - 'mv ./dist-build-debian-latest/ ./public/'
  artifacts:
    paths: ['./public/']
